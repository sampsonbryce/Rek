# interface CreatedUpdatedDate {
#   createdDate: DateTime!
#   updatedDate: DateTime!
# }

# interface CreatedUpdatedBy {
#   createdBy: User!
#   updatedBy: User!
# }

type User {
  id: ID! @unique
  name: String!
  email: String! @unique
  password: String!
  roles: Role!
  userSchedule: UserSchedule 
  employeeSchedule: EmployeeSchedule
  services: [Service!]!
}

# type UserToSchedule{
#   user: User!
#   schedule: UserSchedule!
# }

# type EmployeeToScheduleToServices{
#   id: ID! @unique
#   employee: User!
#   schedule: EmployeeSchedule!
#   services: [Service!]!
# }

type Role {
  owner: User!
  admin: Boolean! @default(value: "false")
  employee: Boolean! @default(value: "false")
  user: Boolean! @default(value: "true")
}

type Service {
  id: ID! @unique
  name: String! @unique
  female_title: String!
  male_title: String!
  time_blocks: Int! @default(value: 2)
}

interface Schedule {
  id: ID! @unique
  appointments: [Appointment!]!
}

type EmployeeSchedule implements Schedule{
  # employee: User!
  id: ID! @unique
  workingTimes: [WorkingTime!]!
  appointments: [Appointment!]!
}

type WorkingTime {
  id: ID! @unique
  start: DateTime!
  end: DateTime!
}

type UserSchedule implements Schedule{
  id: ID! @unique
  appointments: [Appointment!]!
}

type Appointment {
  id: ID! @unique
  start: DateTime!
  end: DateTime!
}

